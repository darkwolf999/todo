name: home_work_4 workflow. analyze, testing, build, deploy.

on:
  push:
    branches:
      - main
      - '*'

  pull_request:
    branches:
      -main

jobs:
  analyze:
    timeout-minutes: 10
    name: 'analyze app'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: 'Setup Flutter'
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: 'Pub get'
        run: flutter pub get

      - name: 'Formatting'
        run: dart format --set-exit-if-changed .

      - name: 'Codegen'
        run: |
          dart run build_runner build --delete-conflicting-outputs
          dart run easy_localization:generate -f keys -o locale_keys.g.dart -O "lib/l10n" -S "assets/translations"
          dart run easy_localization:generate -S "assets/translations" -O "lib/l10n"

      - name: 'Analyze'
        run: flutter analyze --no-fatal-infos

  test:
    timeout-minutes: 10
    name: 'test app'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: 'Setup java'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '12.x'
          cache: gradle

      - name: 'Setup Flutter'
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: 'Pub get'
        run: flutter pub get

      - name: 'Codegen'
        run: |
          dart run build_runner build --delete-conflicting-outputs
          dart run easy_localization:generate -f keys -o locale_keys.g.dart -O "lib/l10n" -S "assets/translations"
          dart run easy_localization:generate -S "assets/translations" -O "lib/l10n"

      - name: 'Test'
        run: flutter test

  build:
    timeout-minutes: 20
    name: 'build Android app and deploy it'
    runs-on: ubuntu-latest
    needs:
      - analyze
      - test

    steps:
      - uses: actions/checkout@v3

      - name: 'Setup Flutter'
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: 'Set env'
        run: |
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> $GITHUB_ENV
          echo "AUTH_TOKEN=${{ secrets.AUTH_TOKEN }}" >> $GITHUB_ENV

      - name: 'Pub get'
        run: flutter pub get

      - name: 'Codegen'
        run: |
          dart run build_runner build --delete-conflicting-outputs
          dart run easy_localization:generate -f keys -o locale_keys.g.dart -O "lib/l10n" -S "assets/translations"
          dart run easy_localization:generate -S "assets/translations" -O "lib/l10n"
         
      - name: 'Create google-services.json empty file'
        run: cat /home/runner/work/todo/todo/android/app/google-services.json | base64

      - name: 'Put data into google-services.json from Github secrets'
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA > /home/runner/work/todo/todo/android/app/google-services.json

      - name: 'Build APK'
        run: flutter build apk --release

      - name: Deploy APK
        uses: actions/upload-artifact@v3
        with:
          name: ToDo-Release
          path: build/app/outputs/flutter-apk/