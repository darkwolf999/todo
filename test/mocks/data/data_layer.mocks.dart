// Mocks generated by Mockito 5.4.2 from annotations
// in todo/test/mocks/data/data_layer.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo/data/api/database_tasks_api.dart' as _i9;
import 'package:todo/data/api/network_tasks_api.dart' as _i7;
import 'package:todo/data/models/db/task_db.dart' as _i10;
import 'package:todo/data/models/dto/task_dto.dart' as _i8;
import 'package:todo/data/models/dto/task_response_dto.dart' as _i3;
import 'package:todo/data/models/dto/tasks_list_dto.dart' as _i2;
import 'package:todo/domain/models/task_model.dart' as _i6;
import 'package:todo/domain/repository/tasks_repository.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTasksListDto_0 extends _i1.SmartFake implements _i2.TasksListDto {
  _FakeTasksListDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTaskResponseDto_1 extends _i1.SmartFake
    implements _i3.TaskResponseDto {
  _FakeTaskResponseDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TasksRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTasksRepository extends _i1.Mock implements _i4.TasksRepository {
  MockTasksRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<List<_i6.TaskModel>> getTasks() => (super.noSuchMethod(
        Invocation.method(
          #getTasks,
          [],
        ),
        returnValue: _i5.Stream<List<_i6.TaskModel>>.empty(),
      ) as _i5.Stream<List<_i6.TaskModel>>);
  @override
  _i5.Future<void> fetchTasks() => (super.noSuchMethod(
        Invocation.method(
          #fetchTasks,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> saveTask(_i6.TaskModel? task) => (super.noSuchMethod(
        Invocation.method(
          #saveTask,
          [task],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> deleteTask(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [uuid],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> fetchSingleTaskFromNetwork(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSingleTaskFromNetwork,
          [uuid],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> fetchSingleTaskFromDB(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #fetchSingleTaskFromDB,
          [uuid],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> refreshNetworkTasks(List<_i6.TaskModel>? tasks) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshNetworkTasks,
          [tasks],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [NetworkTasksApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkTasksApi extends _i1.Mock implements _i7.NetworkTasksApi {
  MockNetworkTasksApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.TasksListDto> fetchTasks() => (super.noSuchMethod(
        Invocation.method(
          #fetchTasks,
          [],
        ),
        returnValue: _i5.Future<_i2.TasksListDto>.value(_FakeTasksListDto_0(
          this,
          Invocation.method(
            #fetchTasks,
            [],
          ),
        )),
      ) as _i5.Future<_i2.TasksListDto>);
  @override
  _i5.Future<_i3.TaskResponseDto> addNewTask(_i8.TaskDto? taskDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewTask,
          [taskDto],
        ),
        returnValue:
            _i5.Future<_i3.TaskResponseDto>.value(_FakeTaskResponseDto_1(
          this,
          Invocation.method(
            #addNewTask,
            [taskDto],
          ),
        )),
      ) as _i5.Future<_i3.TaskResponseDto>);
  @override
  _i5.Future<_i3.TaskResponseDto> editTask(_i8.TaskDto? taskDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #editTask,
          [taskDto],
        ),
        returnValue:
            _i5.Future<_i3.TaskResponseDto>.value(_FakeTaskResponseDto_1(
          this,
          Invocation.method(
            #editTask,
            [taskDto],
          ),
        )),
      ) as _i5.Future<_i3.TaskResponseDto>);
  @override
  _i5.Future<_i3.TaskResponseDto> deleteTask(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [uuid],
        ),
        returnValue:
            _i5.Future<_i3.TaskResponseDto>.value(_FakeTaskResponseDto_1(
          this,
          Invocation.method(
            #deleteTask,
            [uuid],
          ),
        )),
      ) as _i5.Future<_i3.TaskResponseDto>);
  @override
  _i5.Future<_i3.TaskResponseDto> fetchSingleTask(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSingleTask,
          [uuid],
        ),
        returnValue:
            _i5.Future<_i3.TaskResponseDto>.value(_FakeTaskResponseDto_1(
          this,
          Invocation.method(
            #fetchSingleTask,
            [uuid],
          ),
        )),
      ) as _i5.Future<_i3.TaskResponseDto>);
  @override
  _i5.Future<_i2.TasksListDto> refreshTasks(List<_i8.TaskDto>? tasksDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshTasks,
          [tasksDto],
        ),
        returnValue: _i5.Future<_i2.TasksListDto>.value(_FakeTasksListDto_0(
          this,
          Invocation.method(
            #refreshTasks,
            [tasksDto],
          ),
        )),
      ) as _i5.Future<_i2.TasksListDto>);
}

/// A class which mocks [DatabaseTasksApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseTasksApi extends _i1.Mock implements _i9.DatabaseTasksApi {
  MockDatabaseTasksApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i10.DBTask>?> fetchTasks() => (super.noSuchMethod(
        Invocation.method(
          #fetchTasks,
          [],
        ),
        returnValue: _i5.Future<List<_i10.DBTask>?>.value(),
      ) as _i5.Future<List<_i10.DBTask>?>);
  @override
  _i5.Future<_i10.DBTask?> fetchSingleTask(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #fetchSingleTask,
          [uuid],
        ),
        returnValue: _i5.Future<_i10.DBTask?>.value(),
      ) as _i5.Future<_i10.DBTask?>);
  @override
  _i5.Future<void> putTask(_i10.DBTask? task) => (super.noSuchMethod(
        Invocation.method(
          #putTask,
          [task],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> refreshTasks(
    List<_i10.DBTask>? tasks,
    List<int>? isarIds,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshTasks,
          [
            tasks,
            isarIds,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> putAllTasks(List<_i10.DBTask>? tasks) => (super.noSuchMethod(
        Invocation.method(
          #putAllTasks,
          [tasks],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> deleteTask(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [uuid],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
